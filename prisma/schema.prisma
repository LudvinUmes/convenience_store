generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model detalle_ventas {
  id                    Int             @id @default(autoincrement())
  id_venta              Int
  cantidad              Int
  precio_unitario       Decimal         @db.Decimal(18, 2)
  subtotal              Decimal         @db.Decimal(18, 2)
  usuario_creacion      Int
  fecha_creacion        DateTime        @db.Timestamp(6)
  usuario_modificacion  Int?
  fecha_modificacion    DateTime?       @db.Timestamp(6)
  estado                Int             @db.SmallInt
  id_lote_producto      Int?
  id_producto_preparado Int?
  lote_productos        lote_productos? @relation(fields: [id_lote_producto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_detalle_ventas_lote")
  ventas                ventas          @relation(fields: [id_venta], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_detalle_ventas_venta")
}

model devoluciones {
  id                   Int               @id @default(autoincrement())
  id_venta             Int
  fecha_devolucion     DateTime          @db.Timestamp(6)
  motivo               String
  estado               estado_devolucion
  usuario_creacion     Int
  fecha_creacion       DateTime          @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?         @db.Timestamp(6)
  ventas               ventas            @relation(fields: [id_venta], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_devoluciones_venta")
}

model lote_materias {
  id                   Int             @id @default(autoincrement())
  id_materia           Int
  costo_unitario       Int
  precio_lote          Decimal         @db.Decimal(10, 2)
  stock                Int
  fecha_ingreso        DateTime        @db.Timestamp(6)
  fecha_vencimiento    DateTime        @db.Timestamp(6)
  descripcion          String?
  usuario_creacion     Int
  fecha_creacion       DateTime        @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?       @db.Timestamp(6)
  estado               Int             @db.SmallInt
  materias_primas      materias_primas @relation(fields: [id_materia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_lote_materias_materias")
}

model lote_productos {
  id                   Int              @id @default(autoincrement())
  id_producto          Int
  costo_unitario       Decimal          @db.Decimal(18, 2)
  precio_lote          Decimal          @db.Decimal(10, 2)
  stock                Int
  fecha_ingreso        DateTime         @db.Timestamp(6)
  fecha_vencimiento    DateTime         @db.Timestamp(6)
  descripcion          String?
  usuario_creacion     Int
  fecha_creacion       DateTime         @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?        @db.Timestamp(6)
  estado               Int              @db.SmallInt
  detalle_ventas       detalle_ventas[]
  productos            productos        @relation(fields: [id_producto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_lote_productos_productos")
}

model marcas {
  id                   Int         @id @default(autoincrement())
  nombre               String      @db.VarChar(100)
  usuario_creacion     Int
  fecha_creacion       DateTime    @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?   @db.Timestamp(6)
  estado               Int         @db.SmallInt
  productos            productos[]
}

model materias_primas {
  id                   Int             @id @default(autoincrement())
  nombre               String          @db.VarChar(100)
  descripcion          String?
  unidad_medida        String          @db.VarChar(45)
  stock_minimo         Int
  categoria_materia    String          @db.VarChar(45)
  usuario_creacion     Int
  fecha_creacion       DateTime        @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?       @db.Timestamp(6)
  estado               Int             @db.SmallInt
  lote_materias        lote_materias[]
}

model pagos {
  id                   Int         @id @default(autoincrement())
  metodo_pago          metodo_pago
  monto                Decimal     @db.Decimal(10, 2)
  id_venta             Int
  usuario_creacion     Int
  fecha_creacion       DateTime    @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?   @db.Timestamp(6)
  estado               Int         @db.SmallInt
  ventas               ventas      @relation(fields: [id_venta], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pagos_venta")
}

model productos {
  id                   Int                @id @default(autoincrement())
  nombre               String             @db.VarChar(45)
  descripcion          String?
  precio_referencia    Decimal            @db.Decimal(18, 2)
  unidad_medida        String             @db.VarChar(45)
  stock_minimo         Int
  id_tipo              Int
  id_marca             Int
  usuario_creacion     Int
  fecha_creacion       DateTime           @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?          @db.Timestamp(6)
  estado               Int                @db.SmallInt
  lote_productos       lote_productos[]
  marcas               marcas             @relation(fields: [id_marca], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_productos_marcas")
  tipos_producto       tipos_producto     @relation(fields: [id_tipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_productos_tipos")
  productos_receta     productos_receta[]
}

model productos_receta {
  id                      Int       @id @default(autoincrement())
  descripcion             String
  nombre_receta           String?   @db.VarChar(45)
  id_productos_preparados Int
  usuario_creacion        Int
  fecha_creacion          DateTime  @db.Timestamp(6)
  usuario_modificacion    Int?
  fecha_modificacion      DateTime? @db.Timestamp(6)
  estado                  Int       @db.SmallInt
  productos               productos @relation(fields: [id_productos_preparados], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_productos_receta_preparados")
}

model tipos_producto {
  id                   Int         @id @default(autoincrement())
  name                 String      @db.VarChar(45)
  usuario_creacion     Int
  fecha_creacion       DateTime    @db.Timestamp(6)
  usuario_modificacion String?     @db.VarChar(45)
  fecha_modificacion   DateTime?   @db.Timestamp(6)
  estado               Int         @db.SmallInt
  productos            productos[]
}

model ventas {
  id                   Int              @id @default(autoincrement())
  fecha_venta          DateTime         @db.Timestamp(6)
  total                Decimal          @db.Decimal(18, 2)
  estado               estado_venta
  observaciones        String?
  nit                  Int?
  nombre               String?          @db.VarChar(255)
  usuario_creacion     Int
  fecha_creacion       DateTime         @db.Timestamp(6)
  usuario_modificacion Int?
  fecha_modificacion   DateTime?        @db.Timestamp(6)
  estado_copy1         Int              @db.SmallInt
  detalle_ventas       detalle_ventas[]
  devoluciones         devoluciones[]
  pagos                pagos[]
}

enum estado_devolucion {
  pendiente
  aprobada
  rechazada
}

enum estado_venta {
  pendiente
  pagado
  cancelado
}

enum metodo_pago {
  Efectivo
  Tarjeta_Cr_dito @map("Tarjeta Crédito")
  Tarjeta_D_bito  @map("Tarjeta Débito")
  Transferencia
}
